#
# In:
#   m0    - back direction
#   m1    - anabolism regime (-1)
# Out:
#   ax    - 1 - success
#           0 - fail
#
# func0. Cuts the tail
#
func
  load                        # ax=back dir
  dir
  len
  rhead
  split                @mol   # bx=back dir
  lhead
  reax
end
#
# Checks ate molecule and cut first atom if needed.
# Turns off anabolism regime if last atom found.
# Stores index of current atom in m2
# In: 
#   mPos - 1
#   head - 0 
#
func
  right                       # m2
  #
  # Loads first atom from ate molecule
  #
  rhead                @mol   # h1
  mol
  read
  toggle                      # bx=ate first atom
  #
  # Loads index of current atom of needed molecule
  #
  load
  read                        # ax=cur atom
  #
  # Returns memory pos
  #
  left                 @mol   # m1
  #
  # Unneeded atom
  #
  ifne
    left                      # m0
    lhead                     # h0
    0
    call
    right              @mol   # m1
    ret
  end
  #
  # Compares two atoms
  #
  ife
    #
    # Splits first atom and cut other
    #
    0
    catab
    rmol               @mol
    left                      # m0
    #
    # Resets head position
    #
    lhead                     # h0
    call
    #
    # Updates cur atom index
    #
    right                     # m1
    right                     # m2
    load               @mol
    inc                       # ax=cur atom index
    save
    #
    # Checks if it's last atom
    #
    mol                       # bx=last atom idx
    load                      # ax=cur atom idx
    ifg
      #
      # Joins all atoms together
      #
      mol              @mol   # h0
      toggle
      sub  
      inc                     # ax=mol len
      toggle                  # bx=mol len
      len
      sub              @mol   # ax=first atom idx
      rhead                   # h1
      smol
      lhead                   # h0
	  63
      loop
		0              @mol
        dec
        anab
        reax
        #
        # Reach last atom
        #
        ifn
          break
        end            @mol
      end
      left                    # m1
      0
      save
      right                   # m2
    end                @mol
    rhead                     # h1
    left                      # m1
  end
  lhead                       # h0
end
#
# Sets head0 to the beginnig of replicator
#
0                      @mol
smol
#
# Create big loop
#
20
toggle
eq
lshift                        # ax=20971520
loop                   @mol
  #
  # Step any direction, eat and checks if needed mol
  #
  8
  rand
  dir
  step
  #
  # Store back dir in m0
  #
  toggle                      # bx=dir
  4                    @mol
  add                         # ax=back dir
  save                        # m0=back dir
  #
  # We should have free space behind for wastes
  #
  reax
  ifp
    eq                        # ax=dir
    join               @mol
    reax                      # ax=ate mol len
    ifp                       # ate something
      right                   # m1
      #
      # Checks anabolism regime
      #
      load
      ifn
        1              @mol
        call
        left
        cont
      end
      #
      # Checks cur mol len
      #
      mol                     # h0
      toggle           @mol   # ax=molIdx1  bx=molIdx0
      sub
      inc                     # ax=cur mol len
      save                    # m1=cur mol len
      #
      # Sets head1 to ate molecule
      #
      reax                    # ax=ate mol len
      toggle                  # bx=ate mol len
      len              @mol
      sub                     # ax=ate mol idx
      rhead                   # h1
      smol
      lhead                   # h0
      #
      # Loads cur mol len into ax
      #
      load
      left             @mol   # m0
      toggle                  # bx=cur mol len
      reax                    # ax=ate mol len
      #
      # Wrong length. Cut it
      #
      ifne
        #
        # Try to get energy by catabolism
        #
        0
        rhead                 # h1
        catab          @mol
        lhead                 # h0
        #
        # Cut bad molecules
        #
        call
        ifz
          break
        end
      end              @mol
      #
      # Correct len. Check if needed
      #
      ife
        #
        # Compares current mol and eated
        #
        mcmp
        reax
        ifz
          #
          # Try to get energy by catabolism on every 10th molecule
          #
          10
          rand         @mol
          ifz
            rhead
            catab
            lhead
          end
          #
          # wrong mol, cut it
          #
          0            @mol
          call
          ifz
            break
          end
          #
          # Try to assemble needed molecule with anabolism
          #
          10
          rand         @mol
          toggle
          3
          #
          # In 20% of cases sets anabolism regime
          #
          ifg
            right
            0
            dec        @mol
            save
            #
            # Sets cur atom idx
            #
            mol
            right             # m2
            save
            left              # m1
            left       @mol   # m0
            # check ax here to break the loop
          end
          cont
        end
        #
        # Needed mol, just leave it. Checks if 
        # this is the end (last replicator mol)
        #
        1
        toggle
        33             @mol
        lshift                  # ax=66 - nop
        right                   # m1
        save                    # m1=66 - nop
        mol
        read
        toggle         @mol     # bx=first atom
        load
        left                    # m0
        ife
          #
          # Loads back dir from m0
          #
          load
          toggle                # bx=back dir
          17           @mol
          save
          break
        end
        #
        # Move h0 to the next mol
        #
        rmol
      end
    end                @mol
  end
end
#
# Cut wastes. The code below is not random. The reason behind
# it, that nop atom should be the first atom in a last molecule.
# Any other molecule must not have it on the beginning
#
63
#
# We have to try cut wastes many times in different places
#
loop
  8
  8                    @mol
  8
  8
  8
  rand
  dir
  step                 @mol
  line
  line
  smol
  rmol
  rmol
  rmol                 @mol
  reax
  ifn
    break
  end
  len
  split                @mol
  nop                         # separator. must be first atom of last mol
  reax
  ifp
    break
  end
end                    @mol
#
# Food section
#