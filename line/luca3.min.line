nop
nop
nop               @mol
func                    # func0
  63
  lshift          @mol
  lshift                # 252 molecules/iterations
  loop
    right         @mol  # m1
    mcmp                # re=0|1
    reax                # ax=0|1
    ifp           @mol
      mol               # ax=mol
      ret
    end           @mol
    rmol
    mol
    inc           @mol  # ax=start+1
    toggle              # ax=end       bx=start+1
    left                # m0
    load          @mol  # ax=limit     bx=start+1
    ifl
      0
      dec         @mol
      ret
    end
  end             @mol
end
func                    # func1
  load            @mol  # ax=start
  right                 # m1
  toggle
  load            @mol  # ax=end       bx=start
  toggle                # ax=start     bx=end
  find
  right           @mol  # m2
  save                  # m2=idx-1
  toggle
  reax            @mol
  ifn
    ret
  end             @mol
  toggle                # ax=idx
  dec
  toggle          @mol  # bx=idx-1
  0
  dec                   # ax=-1        bx=idx-1
  catab           @mol
  mol
  toggle
  sub             @mol
  inc
  toggle                # bx=molLen
  load            @mol  # ax=molIdx-1
  add                   # ax=molEndIdx
  toggle                # bx=molEndIdx+1
  0               @mol
  dec                   # ax-1         bx=molEndIdx+1
  catab
  load            @mol  # ax=molIdx
  toggle
  dec
  toggle          @mol
  savea                 # m2=molIdx    m3=molEndIdx
  smol
  0               @mol
  smol
  lmol
  w2mol           @mol
  load
  smol
  right           @mol
  10
  loop
    mol           @mol
    load                # ax=molEnd1   bx=molEnd2
    ife
      break       @mol
    end
    0
    dec           @mol
    anab
  end
end               @mol
func                    # func2
  0
  smol            @mol
  lmol
  w2mol
  mol             @mol  # ax=last molecule
  save                  # m0=last molecule
  right                 # m1
  0               @mol
  smol
  cmol                  # m1-m3[nop,nop,nop]
  rmol            @mol
  left                  # m0
  call                  # ax=sep1Idx
  ifn             @mol
    ret
  end
  toggle          @mol  # bx=sep1Idx
  left                  # m0
  0
  smol            @mol
  save                  # m0=i
  toggle                # ax=sep1Idx
  smol            @mol
  rmol
  reax
  ifn             @mol
    ret
  end
  mol             @mol
  right                 # m1
  save                  # m1=foodStart
  mol2w           @mol
  mol
  right                 # m2
  save            @mol  # m2=foodEnd
  left                  # m1
  left                  # m0
  load            @mol
  smol
  right
  right           @mol
  right                 # m3
  63
  lshift          @mol
  lshift
  loop
    cmol          @mol  # m3[nop,nop,nop]
    left                # m2
    left                # m1=foodStart
    load          @mol
    smol
    right               # m2
    0             @mol
    call                # ax=molIdx
    ifn
      left        @mol  # m1
      left              # m0
      load
      smol        @mol  # mol=molIdx
      right             # m1
      1
      call        @mol
      ret
    end
    mmol          @mol
    left                # m2=foodEnd
    load
    smol          @mol
    lmol
    mol
    save          @mol  # m2=foodEnd-1
    0
    smol
    lmol          @mol
    w2mol
    left                # m1
    left          @mol  # m0
    load
    smol
    rmol          @mol
    mol
    save                # m0=i++
    toggle        @mol  # bx=i
    right               # m1=foodStart
    load                # ax=foodStart bx=i
    ife           @mol
      break
    end
    right         @mol  # m2
    right               # m3
  end
  17              @mol
  save
  len
  split           @mol
end
2
call              @mol
5
toggle                  # bx=5
30
loop
  8
  rand            @mol
  step
  join
  ifl                   # ax=rnd       bx=5
    reax
    ifp
      0
      smol
      lmol
	  catab
    end
  end
end               @mol
ret
nop
nop               @mol
nop
nop
nop               @mol