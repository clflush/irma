#
# This is molecule-separator. The same one at the end of
# replicator code. This is how we distinguish replicator code 
# and food segment
#
nop
nop
nop               @mol
#
#  sep    repl                 sep  food
# [66,66, 1,0,1,1,0,2,1,2,1, 66,66, 1,2,1,0,0,2,1,0,1]
#  mol                              read              write
#
# desc: search for molecule index in a code
# in  : m0     - search limit index
# in  : m1..mX - molecule
# in  : mol    - search start index
# out : idx|-1
#
func                    # func0
  63
  lshift          @mol
  lshift                # 252 mols max
  loop
    right         @mol  # m1
    cmp                 # re=0|1
    left
    reax          @mol  # ax=0|1
    ifp
      mol               # ax=mol
      axre        @mol  # re=mol
      ret
    end
    rmol          @mol
    #
    # Checks finish limit
    #
    mol
    toggle
    load          @mol
    ifl
      0
      dec         @mol
      axre
      ret
    end           @mol
  end
end
#
# desc: Make clone.
# in  : nothing
#
func              @mol  # func1
  #
  # 1. finds second separator molecule
  #
  # 1.1 sets search limit to m0
  63
  lshift
  lshift          @mol
  save                  # m0=252
  # 1.2 sets 0 molecule as separator
  right                 # m1
  0               @mol
  cmol                  # m1-m3[nop,nop,nop]
  smol
  rmol            @mol
  left                  # m0
  call
  reax            @mol  # ax=sep1Mol
  ifn
    ret
  end             @mol
  save                  # m0=sep1Mol
  #
  # 2. sets read head to the food section
  #
  smol
  rmol            @mol
  reax
  # 2.1 If organism has no food section
  ifn
    ret           @mol
  end
  r2mol
  mol             @mol
  left                  # m-1
  save                  # m-1=food idx
  right           @mol  # m0
  #
  # 4. sets write head to the end
  #
  0
  smol
  lmol            @mol
  w2mol
  #
  # 5. Here starts main loop, where organism
  # walk through it's replicator section and
  # search for it's molecules in food section.
  # m0 stores current replicator molecule index
  #
  # 5.1. sets mol pointer to the first molecule 
  0
  smol            @mol
  save                  # m0=i
  # 5.2. sets limit index
  mol2w
  mol             @mol
  right                 # m1
  save                  # m1=limit
  # 5.3. sets max interations and to m2
  right           @mol  # m2=curMol
  63
  lshift
  lshift          @mol
  loop
    # 5.4. copy current replicator molecule to m2...mX
    # sets search limit and call search function
    cmol                # m2[nop,nop,nop]
    mol2r         @mol
    left                # m1
    0
    call          @mol
    reax
    ifn
      ret         @mol
    end
    # 5.5. move found molecule (ax,mol=found idx)
    r2mol
    mmol          @mol
    # 5.6. updates limit value (memory and write head)
    load
    smol
    lmol          @mol
    mol
    save                # m1=limit-1
    # 5.7. updates i
    left          @mol
    load
    smol
    rmol          @mol
    mol
    save                # m0=i+1
    # 5.8. sets read head back to food section
    left          @mol  # m-1
    load
    smol
    r2mol         @mol
    # 5.9. sets mol head to i
    right               # m0
    load
    smol          @mol
    right
    right
  end             @mol
end
#
# Try to make clone
#
1
call              @mol
ret
nop
nop               @mol
nop
nop
nop               @mol
#
# here is test food section. This part---------------------
# should be removed after tests----------------------------
#
#
# This is molecule-separator. The same one at the end of
# replicator code. This is how we distinguish replicator code 
# and food segment
#
nop
nop
nop               @mol
#
#  sep    repl                 sep  food
# [66,66, 1,0,1,1,0,2,1,2,1, 66,66, 1,2,1,0,0,2,1,0,1]
#  mol                              read              write
#
# desc: search for molecule index in a code
# in  : m0     - search limit index
# in  : m1..mX - molecule
# in  : mol    - search start index
# out : idx|-1
#
func                    # func0
  63
  lshift          @mol
  lshift                # 252 mols max
  loop
    right         @mol  # m1
    cmp                 # re=0|1
    left
    reax          @mol  # ax=0|1
    ifp
      mol               # ax=mol
      axre        @mol  # re=mol
      ret
    end
    rmol          @mol
    #
    # Checks finish limit
    #
    mol
    toggle
    load          @mol
    ifl
      0
      dec         @mol
      axre
      ret
    end           @mol
  end
end
#
# desc: Make clone.
# in  : nothing
#
func              @mol  # func1
  #
  # 1. finds second separator molecule
  #
  # 1.1 sets search limit to m0
  63
  lshift
  lshift          @mol
  save                  # m0=252
  # 1.2 sets 0 molecule as separator
  right                 # m1
  0               @mol
  cmol                  # m1-m3[nop,nop,nop]
  smol
  rmol            @mol
  left                  # m0
  call
  reax            @mol  # ax=sep1Mol
  ifn
    ret
  end             @mol
  save                  # m0=sep1Mol
  #
  # 2. sets read head to the food section
  #
  smol
  rmol            @mol
  reax
  # 2.1 If organism has no food section
  ifn
    ret           @mol
  end
  r2mol
  mol             @mol
  left                  # m-1
  save                  # m-1=food idx
  right           @mol  # m0
  #
  # 4. sets write head to the end
  #
  0
  smol
  lmol            @mol
  w2mol
  #
  # 5. Here starts main loop, where organism
  # walk through it's replicator section and
  # search for it's molecules in food section.
  # m0 stores current replicator molecule index
  #
  # 5.1. sets mol pointer to the first molecule 
  0
  smol            @mol
  save                  # m0=i
  # 5.2. sets limit index
  mol2w
  mol             @mol
  right                 # m1
  save                  # m1=limit
  # 5.3. sets max interations and to m2
  right           @mol  # m2=curMol
  63
  lshift
  lshift          @mol
  loop
    # 5.4. copy current replicator molecule to m2...mX
    # sets search limit and call search function
    cmol                # m2[nop,nop,nop]
    mol2r         @mol
    left                # m1
    0
    call          @mol
    reax
    ifn
      ret         @mol
    end
    # 5.5. move found molecule (ax,mol=found idx)
    r2mol
    mmol          @mol
    # 5.6. updates limit value (memory and write head)
    load
    smol
    lmol          @mol
    mol
    save                # m1=limit-1
    # 5.7. updates i
    left          @mol
    load
    smol
    rmol          @mol
    mol
    save                # m0=i+1
    # 5.8. sets read head back to food section
    left          @mol  # m-1
    load
    smol
    r2mol         @mol
    # 5.9. sets mol head to i
    right               # m0
    load
    smol          @mol
    right
    right
  end             @mol
end
#
# Try to make clone
#
1
call              @mol
ret
nop
nop               @mol
nop
nop
nop               @mol
