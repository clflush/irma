#
# This file contains LUCA - Last Universal Common Ancestor
#
#  sep    repl                 sep  food               repl copy
# [66,66, 1,0,1,1,0,2,1,2,1, 66,66, 1,2,1,0,0,2,1,0,1, 1,3,2,1,1,2]
#         mol                       mol                write
#
# This is molecule-separator. The same one at the end of
# replicator code. This is how we distinguish replicator code 
# and food segment
#
nop
nop
nop               @mol
#
# desc: search for molecule index in a code
# in  : m0     - search limit index
# in  : m1..mX - molecule
# in  : mol    - search start index
# out : idx|-1
#
func                    # func0
  63
  lshift          @mol
  lshift                # 252 mols max
  loop
    right         @mol  # m1
    mcmp                # re=0|1
    left
    reax          @mol  # ax=0|1
    ifp
      mol               # ax=mol
      ret         @mol
    end
    rmol
    #
    # Checks finish limit
    #
    mol           @mol
    toggle
    load
    ifl           @mol
      0
      dec
      ret         @mol
    end
  end
end               @mol
#
# desc: Makes clone.
# in  : nothing
# info: m-1  - food section start
#       m0   - i
#       m1   - food section end
#       m2.. - molecule
#
func                    # func1
  #
  # 1. finds second separator molecule
  #
  # 1.1. sets write head to the last molecule
  0
  smol            @mol
  lmol
  w2mol
  # 1.2. sets search limit to m0
  63              @mol
  lshift
  lshift
  save            @mol  # m0=252
  # 1.3. sets 0 molecule as separator
  right                 # m1
  0
  smol            @mol
  cmol                  # m1-m3[nop,nop,nop]
  rmol
  left            @mol  # m0
  call                  # ax=sep1Mol
  ifn
    ret           @mol
  end
  #
  # 2. sets mol head to the food section
  #
  rmol
  reax            @mol
  # 2.1 If organism has no food section
  ifn
    ret
  end             @mol
  mol
  left                  # m-1
  save            @mol  # m-1=food idx
  right                 # m0
  #
  # 5. Here starts main loop, where organism
  # walk through it's replicator section and
  # search for it's molecules in food section.
  # m0 stores current replicator molecule index
  #
  # 5.1. sets mol pointer to the first molecule 
  0
  smol            @mol
  save                  # m0=i
  # 5.2. sets limit index
  mol2w
  mol             @mol
  right                 # m1
  save                  # m1=limit
  # 5.3. set mol head to food section
  left            @mol  # m0
  left                  # m-1
  load                  # ax=foodIdx
  smol            @mol
  # 5.3. sets max interations and to m2
  right                 # m0
  right                 # m1
  right           @mol  # m2=curMol
  63
  lshift
  lshift          @mol
  loop
    # 5.4. copy current replicator molecule to m2...mX
    # sets search limit and call search function
    cmol                # m2[nop,nop,nop]
    left          @mol  # m1
    0
    call                # ax=molIdx
    ifn           @mol
      ret
    end
    smol          @mol
    # 5.5. move found molecule (ax,mol=found idx)
    mmol
    # 5.6. updates limit value (memory)
    load
    smol          @mol
    lmol
    mol
    save          @mol  # m1=limit-1
    # 5.7. updates i
    left                # m0
    load
    smol          @mol
    rmol
    mol
    save                # m0=i+1
    # 5.8. checks if copy has done
    left          @mol  # m-1
    load
    smol
    toggle        @mol
    right               # m0
    load
    ife           @mol
      break
    end
    ifg           @mol
      break
    end
    # 5.9. sets mem to m2
    right         @mol  # m1
    right               # m2
  end
  #
  # 6. cut the tail with copied organism
  #
  17              @mol
  save
  len
  split           @mol
end
#
# Try to make clone
#
1
call              @mol
ret
nop
nop               @mol
nop
nop
nop               @mol
#
# here is test food section. This part---------------------
# should be removed after tests----------------------------
#
#
# This is molecule-separator. The same one at the end of
# replicator code. This is how we distinguish replicator code 
# and food segment
#
nop
nop
nop               @mol
#
#  sep    repl                 sep  food               repl copy
# [66,66, 1,0,1,1,0,2,1,2,1, 66,66, 1,2,1,0,0,2,1,0,1, 1,3,2,1,1,2]
#         mol                       mol                write
#
# desc: search for molecule index in a code
# in  : m0     - search limit index
# in  : m1..mX - molecule
# in  : mol    - search start index
# out : idx|-1
#
func                    # func0
  63
  lshift          @mol
  lshift                # 252 mols max
  loop
    right         @mol  # m1
    mcmp                # re=0|1
    left
    reax          @mol  # ax=0|1
    ifp
      mol               # ax=mol
      ret         @mol
    end
    rmol
    #
    # Checks finish limit
    #
    mol           @mol
    toggle
    load
    ifl           @mol
      0
      dec
      ret         @mol
    end
  end
end               @mol
#
# desc: Makes clone.
# in  : nothing
# info: m-1  - food section start
#       m0   - i
#       m1   - food section end
#       m2.. - molecule
#
func                    # func1
  #
  # 1. finds second separator molecule
  #
  # 1.1. sets write head to the last molecule
  0
  smol            @mol
  lmol
  w2mol
  # 1.2. sets search limit to m0
  63              @mol
  lshift
  lshift
  save            @mol  # m0=252
  # 1.3. sets 0 molecule as separator
  right                 # m1
  0
  smol            @mol
  cmol                  # m1-m3[nop,nop,nop]
  rmol
  left            @mol  # m0
  call                  # ax=sep1Mol
  ifn
    ret           @mol
  end
  #
  # 2. sets mol head to the food section
  #
  rmol
  reax            @mol
  # 2.1 If organism has no food section
  ifn
    ret
  end             @mol
  mol
  left                  # m-1
  save            @mol  # m-1=food idx
  right                 # m0
  #
  # 5. Here starts main loop, where organism
  # walk through it's replicator section and
  # search for it's molecules in food section.
  # m0 stores current replicator molecule index
  #
  # 5.1. sets mol pointer to the first molecule 
  0
  smol            @mol
  save                  # m0=i
  # 5.2. sets limit index
  mol2w
  mol             @mol
  right                 # m1
  save                  # m1=limit
  # 5.3. set mol head to food section
  left            @mol  # m0
  left                  # m-1
  load                  # ax=foodIdx
  smol            @mol
  # 5.3. sets max interations and to m2
  right                 # m0
  right                 # m1
  right           @mol  # m2=curMol
  63
  lshift
  lshift          @mol
  loop
    # 5.4. copy current replicator molecule to m2...mX
    # sets search limit and call search function
    cmol                # m2[nop,nop,nop]
    left          @mol  # m1
    0
    call                # ax=molIdx
    ifn           @mol
      ret
    end
    smol          @mol
    # 5.5. move found molecule (ax,mol=found idx)
    mmol
    # 5.6. updates limit value (memory)
    load
    smol          @mol
    lmol
    mol
    save          @mol  # m1=limit-1
    # 5.7. updates i
    left                # m0
    load
    smol          @mol
    rmol
    mol
    save                # m0=i+1
    # 5.8. checks if copy has done
    left          @mol  # m-1
    load
    smol
    toggle        @mol
    right               # m0
    load
    ife           @mol
      break
    end
    ifg           @mol
      break
    end
    # 5.9. sets mem to m2
    right         @mol  # m1
    right               # m2
  end
  #
  # 6. cut the tail with copied organism
  #
  17              @mol
  save
  len
  split           @mol
end
#
# Try to make clone
#
1
call              @mol
ret
nop
nop               @mol
nop
nop
nop               @mol
