#
# m0    - i
# m1..x - mol
#
#
# func0. Cuts the tail
#
func
  left
  load                 @mol
  right
  toggle                      # bx=back dir
  len                  @mol
  split                       # bx=back dir
end
#
# Reset i counter in m0
#
0                      @mol
save
#
# Create big loop
#
len                           # ~70
toggle                 @mol
eq
mul
loop                   @mol
  #
  # Copy current mol into m1..x
  #
  load                        # ax=i
  smol
  right                @mol   # m1
  cmol                        # m1..x - i mol
  left                        # m0
  #
  # Step any direction, eat and checks if needed mol
  #
  8                    @mol
  rand
  step
  #
  # Store back dir in m-1
  #
  toggle               @mol   # bx=dir
  4
  add                         # ax=back dir
  left                 @mol   # m-1
  save
  right                       # m0
  #
  # We should have free space behind for wastes
  #
  reax                 @mol
  ifp
    eq                        # ax=dir
    join               @mol
    reax
    ifp                       # ate something
      #
      # Checks ate mol len
      #
      load             @mol   # ax=cur mol idx
      smol
      mol
      toggle           @mol   # ax=molIdx1  bx=molIdx0
      sub                     # ax=cur mol len
      inc
      toggle           @mol   # bx=cur mol len
      reax                    # ax=ate mol len
      #
      # Cut bad mol
      #
      ifne                    # bad ate mol len
        toggle         @mol   # bx=ate mol len
        len
        sub                   # ax=old code len
        smol           @mol
        0
        call
      end              @mol
      #
      # Sets mol head to the end
      #
      len
      smol
      #
      # Compares current mol and eated
      #
      right            @mol
      mcmp
      left
      reax             @mol
      ifz                     # unneeded mol cut it
        0
        call           @mol
        0
      end
      ifp              @mol   # needed mol
        #
        # Increase i, in m0
        #
        load
        smol
        rmol           @mol
        mol
        save
        #
        # Checks if this is the end (last replicator mol)
        #
        33             @mol
        lshift                # ax=66 - nop
        toggle                # bx=66
        right          @mol
        load
        left
        ife            @mol
          #
          # Loads back dir from m-1
          #
          left                # m-1
          load
          right        @mol
          toggle              # bx=back dir
          17
          save         @mol
          break
        end
      end              @mol
    end
  end
end                    @mol
#
# Cut wastes
#
line
line
smol                   @mol
rmol
rmol
rmol                   @mol
nop                           # separator id
len
split                  @mol
#
# Food section
#